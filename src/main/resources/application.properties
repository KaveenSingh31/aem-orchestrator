#########################################
#       ORCHESTRATOR PROPERTIES
#########################################
# Spring config
endpoints.enabled=false
endpoints.health.enabled=true
endpoints.info.enabled=true

# Orchestrator waits for Author ELB before reading messages from the queue
# Author ELB retry options
startup.waitForAuthorElb.maxAttempts=100
startup.waitForAuthorElb.backOffPeriod=5000


#########################################
#         AWS PROPERTIES
#########################################
# Only needed if running Orchestrator outside of AWS
# eg. ap-southeast-2
aws.region=

aws.sqs.queueName=SqsExampleQueue

aws.cloudformation.stackName.publishDispatcher=-aem-publish-dispatcher-stack
aws.cloudformation.stackName.publish=-aem-publish-stack
aws.cloudformation.stackName.authorDispatcher=-aem-author-dispatcher-stack
aws.cloudformation.stackName.author=-aem-author-stack

aws.cloudformation.autoScaleGroup.logicalId.publishDispatcher=PublishDispatcherAutoScalingGroup
aws.cloudformation.autoScaleGroup.logicalId.publish=PublishAutoScalingGroup
aws.cloudformation.autoScaleGroup.logicalId.authorDispatcher=AuthorDispatcherAutoScalingGroup
  
aws.cloudformation.loadBalancer.logicalId.author=AuthorLoadBalancer

aws.client.connection.timeout=30000
aws.client.max.errorRetry=10

# Only needed if using a proxy
aws.client.useProxy=false
aws.client.proxy.host=
aws.client.proxy.port=

# Protocol also used by the proxy
aws.client.protocol=https

# When taking a snapshot of the publish instance, these tags are taken from
# the publish instance and applied to the snapshot 
aws.snapshot.tags=Component,Name,StackPrefix



#########################################
#         AEM PROPERTIES
#########################################
aem.credentials.s3.use=false
aem.credentials.s3.file.uri=
# NOTE: If aem.credentials.s3.use is set to true, then it will read a JSON formatted credentials file from S3
# and use the contents to override the credentials properties below
aem.credentials.replicator.username=admin
aem.credentials.replicator.password=admin
aem.credentials.orchestrator.username=admin
aem.credentials.orchestrator.password=admin

aem.protocol.publishDispatcher=http
aem.protocol.publish=http
aem.protocol.authorDispatcher=http
aem.protocol.author=http
aem.port.publishDispatcher=80
aem.port.publish=4503
aem.port.authorDispatcher=80
aem.port.author=80

# Used when creating swaggeraem4j client
aem.client.api.debug=false
aem.client.api.connection.timeout=30000

# If set to true, will create reverse replication queues from publish to author
aem.reverseReplication.enable=false

# Transport URI used when creating the reverse replication queue i.e http://host:port<postfix>
aem.reverseReplication.transportUri.postfix=/bin/receive?sling:authRequestLogin=1
